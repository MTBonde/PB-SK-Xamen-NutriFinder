# GitHub Actions workflow for Continuous Deployment of NutriFinder Client
# This workflow builds and pushes the client Docker image to Docker Hub
name: CD â€“ Client

# Define when this workflow should run
on:
  push:                          # Trigger on push events
    branches:
      - main                     # Only run on pushes to main branch (production deployments)

# Define the jobs that make up this workflow
jobs:
  build-and-push-client:         # Job ID for building and pushing client image
    runs-on: ubuntu-latest       # Use latest Ubuntu runner provided by GitHub

    # Sequence of steps that make up this deployment job
    steps:
      # Step 1: Get the source code from the repository
      - name: Checkout repository       # Human-readable step name
        uses: actions/checkout@v3       # Use GitHub's checkout action v3

      # Step 2: Set up Docker Buildx for advanced Docker build features
      - name: Set up Docker Buildx      # Human-readable step name
        uses: docker/setup-buildx-action@v3  # Enable Docker Buildx (multi-platform builds, caching)

      # Step 3: Authenticate with Docker Hub using stored secrets
      - name: Log in to Docker Hub       # Human-readable step name
        uses: docker/login-action@v3     # Use Docker's official login action v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username from GitHub secrets
          password: ${{ secrets.DOCKER_PASSWORD }}  # Docker Hub password/token from GitHub secrets

      # Step 4: Build Docker image and push to Docker Hub with multiple tags
      - name: Build and push NutriFinder Client image  # Human-readable step name
        uses: docker/build-push-action@v6        # Use Docker's official build-push action v6
        with:
          context: .                             # Build context is repository root
          file: NutriFinderClient/Dockerfile     # Path to Dockerfile for client
          push: true                             # Push image to registry after building
          tags: |                                # Multiple tags for the same image
            ${{ secrets.DOCKER_USERNAME }}/nutrifinder-client:latest           # Latest tag for most recent version
            ${{ secrets.DOCKER_USERNAME }}/nutrifinder-client:${{ github.run_number }}  # Tag with workflow run number
            ${{ secrets.DOCKER_USERNAME }}/nutrifinder-client:${{ github.sha }}         # Tag with git commit SHA

      # Step 5: Clean up unused Docker images to free up runner disk space
      - name: Cleanup                    # Human-readable step name
        run: docker image prune -f       # Remove unused Docker images
        # -f = Force removal without confirmation prompt
